package soccer.play;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.Callable;

public class Task implements Callable<String>{
	
	private int id;
	public Task(int id) {
		this.id=id;
	}


	@Override
	public String call() throws Exception {
		Thread.sleep(2000);
		return "Id :" +id;
	}
	

}


public class League {
	
	public static void main(String[] args) {
	ExecutorService executor=Executors.newFixedThreadPool(5);
	List<Future<String>> list=new ArrayList<>();
	for(int i=0;i<1000;i++) {
		Future<String> future=executor.submit(new Task(i+1));
		list.add(future);
	}
	
	for(Future<String> f:list) {
		try {
			System.out.println(f.get());
		} catch (InterruptedException | ExecutionException e) {
			
			e.printStackTrace();
		}
	}
	
	
	}
	
	}


