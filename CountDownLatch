package soccer.play;

import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.CountDownLatch;

public class Task implements Runnable{
	
	private int id;
	private CountDownLatch latch;
	public Task(int id, CountDownLatch latch) {
		this.id=id;
		this.latch=latch;
	}

	@Override
	public void run() {
		System.out.println("Task with id "+id+" has started....");
		try {
			Thread.sleep(2000);
			latch.countDown();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
}

public class League {
	
	public static void main(String[] args) {
	ExecutorService executor=Executors.newSingleThreadExecutor();
	CountDownLatch latch=new CountDownLatch(5);
	
	for(int i=0;i<5;i++) {
		executor.execute(new Task(i,latch));
	}
	
		try {
			latch.await();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		System.out.println("All tasks have been completed");
		executor.shutdown();
	}
	
	
}
	


